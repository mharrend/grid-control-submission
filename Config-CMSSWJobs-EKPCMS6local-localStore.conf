[global]
task      = CMSSW
backend   = condor
workdir   = /storage/9/swieland/local/workdir  ; Set workdir, better use /storage since CMSSW tarball can become really large
cmdargs   = -G -c -m 2 ; -G gui -c run continously -m resubmit failing jobs 2 times, otherwise infinite

[condor]
; universe = docker
JDLData = Requirements = (TARGET.ProvidesEKPResources) && (TARGET.ProvidesIO); use local EKP-ressources
;JDLData = Requirements=(CloudSite="EKPSUPERMACHINES")
JDLData = Requirements=(CloudSite="ekpcloud")  ; run on desktopcloud
JDLData = Requirements=regexp(".*physik.uni-karlsruhe.de",Target.machine)


[jobs]
wall time = 2:00   ; how long jobs can run
;in flight = 2000   ; how many jobs will be submitted at the same time
;memory    = 2000
monitor    = dashboard          ; Enable dashboard monitoring
jobs = 3 ; Only process the first 3 jobs for debugging and testing

[CMSSW]
prepare config          = True
project area            =  /storage/9/swieland/CMSSW_8_0_12 ; choose your own local CMSSW installation as environment
se runtime              = True
config file             =   /storage/9/swieland/CMSSW_8_0_12/src/BoostedTTH/BoostedAnalyzer/test/TutorialboostedAnalysis_cfg.py  ; Give path to CMSSW config
arguments = isData=False  ; additionally arguments for CMSSW-Config

;dataset                 =  /storage/9/swieland/miniAODs/ttHTobb_M125_TuneCUETP8M2_ttHtranche3_13TeV-powheg-pythia8/RunIISpring16MiniAODv2-premix_withHLT_80X_mcRun2_asymptotic_v14-v1/MINIAODSIM
;; if you want to give more than one dataset, you need a blank line after dataset = like
;; dataset =
;;  /ttHTobb1
;; /ttHTobb2
;dataset refresh       = 4:00 ; Define how often grid-control should check for new data sets
;dataset splitter        = FileBoundarySplitter ; split dataset by files
;files per job           = 2
;depends                 = glite
;partition lfn modifier = <xrootd:eu> ; important choose via which site / method input files are accessible, xrootd:eu should be convenient in most cases
;partition lfn modifier dict =
;    <srm:nrg> => srm://dgridsrm-fzk.gridka.de:8443/srm/managerv2?SFN=/pnfs/gridka.de/dcms/disk-only
;    <xrootd>    => root://cms-xrd-global.cern.ch//
;    <xrootd:eu> => root://xrootd-cms.infn.it//
;    <xrootd:us> => root://cmsxrootd.fnal.gov//
;    <xrootd:gridka> => root://cmsxrootd.gridka.de//
;    <xrootd:desy> => root://dcache-cms-xrootd.desy.de:1094//
;    <dcap:gridka> => dcap://dccmsdcap.gridka.de:22125/pnfs/gridka.de/cms/disk-only

inputFiles        = file:/usr/users/swieland/miniAODs/BoostedTTH_MiniAOD_1.root, ;Use local input files
events per job = 100 ; Number of events to process in each job

[storage]
se output files   = *.root ; define which files should be stored, in general *.root should be sufficient
se path           =      /storage/9/swieland/local/sepath ;set se path
