[global]
task      = CMSSW
backend   = condor
workdir   =/storage/a/harrendorf/SamplesForLHC/workdir/#SAMPLENAME#
cmdargs   = -G -c -m 10


[condor]
; JDLData = Requirements=(TARGET.CloudSite=="EKPSUPERMACHINES") docker_image=mschnepf/slc6-condocker
; universe = docker
JDLData = Requirements=(TARGET.CloudSite=="BWFORCLUSTER") +RemoteJob=True
poolArgs req =
  walltimeMin => +RequestWalltime
proxy = VomsProxy


[jobs]
wall time = 1:30
in flight = 2000
memory    = 2000


[CMSSW]
prepare config          = True
project area            = /storage/a/harrendorf/SamplesForLHC/CMSSW_8_0_19
se runtime              = True
config file        = /storage/a/harrendorf/SamplesForLHC/CMSSW_8_0_19/src/BoostedTTH/BoostedProducer/test/boostedProducer_cfg.py
dataset                 = #DATASETNAME#
dataset refresh       = 4:00
dataset splitter        = FileBoundarySplitter
files per job           = 1
depends                 = glite
partition lfn modifier = <xrootd:eu>
partition lfn modifier dict =
    <srm:nrg> => srm://dgridsrm-fzk.gridka.de:8443/srm/managerv2?SFN=/pnfs/gridka.de/dcms/disk-only
    <xrootd>    => root://cms-xrd-global.cern.ch//
    <xrootd:eu> => root://xrootd-cms.infn.it//
    <xrootd:us> => root://cmsxrootd.fnal.gov//
    <xrootd:gridka> => root://cmsxrootd.gridka.de//
    <xrootd:desy> => root://dcache-cms-xrootd.desy.de:1094//
    <dcap:gridka> => dcap://dccmsdcap.gridka.de:22125/pnfs/gridka.de/cms/disk-only


[storage]
se output files   = *.root
se path           = srm://dgridsrm-fzk.gridka.de:8443/srm/managerv2?SFN=/pnfs/gridka.de/dcms/disk-only/store/user/mharrend/
se output pattern = SamplesForHC/Production/#DATASETNAME#/#SAMPLENAME#_@GC_JOB_ID@.@XEXT@


[constants]
HOME =
GC_GLITE_LOCATION  = /cvmfs/grid.cern.ch/emi3ui-latest/etc/profile.d/setup-ui-example.sh
